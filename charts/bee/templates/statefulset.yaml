---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bee.fullname" . }}
  labels:
    {{- include "bee.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "bee.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "bee.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bee.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "bee.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.libp2pSettings.enabled .Values.p2pFixedPort.enabled }}
      initContainers:
        {{- if .Values.libp2pSettings.enabled }}
        - name: init-libp2p
          image: busybox:1.28
          command:
            - sh
            - -c
            - >
              export INDEX=$(echo $(hostname) | rev | cut -d'-' -f 1 | rev);
              mkdir -p /home/bee/.bee/keys;
              chown -R 999:999 /home/bee/.bee/keys;
              export KEY=$(cat /tmp/bee/libp2p.map | grep bee-${INDEX} | cut -d' ' -f2);
              if [ -z "${KEY}" ]; then exit 0; fi;
              printf '%s' "${KEY}" > /home/bee/.bee/keys/libp2p.key;
              echo 'node initialization done';
          volumeMounts:
            - name: data
              mountPath: /home/bee/.bee
            - name: bee-libp2p
              mountPath: /tmp/bee
        {{- end }}
        {{- if .Values.p2pFixedPort.enabled }}
        - name: init-natport
          image: busybox:1.28
          command:
            - sh
            - -c
            - >
              export INDEX=$(echo $(hostname) | rev | cut -d'-' -f 1 | rev);
              NAT_PORT=$(( {{ .Values.p2pFixedPort.nodePortStart }} + INDEX ));
              cp -p /tmp/.bee.yaml /home/bee/.bee.yaml;
              printf 'nat-addr: :%s\n' "${NAT_PORT}" >> /home/bee/.bee.yaml;
              echo 'node initialization done';
          volumeMounts:
            - name: config-file
              mountPath: /home/bee
            - name: config
              mountPath: /tmp/.bee.yaml
              subPath: .bee.yaml
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bee
            - start
            - --config=.bee.yaml
          ports:
            - containerPort: {{ int (split ":" .Values.beeConfig.api_addr )._1 }}
              name: api
              protocol: TCP
            - containerPort: {{ int (split ":" .Values.beeConfig.p2p_addr )._1 }}
              name: p2p
              protocol: TCP
          {{- if .Values.beeConfig.debug_api_enable }}
            - containerPort: {{ int (split ":" .Values.beeConfig.debug_api_addr )._1 }}
              name: debug
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: debug
          readinessProbe:
            httpGet:
              path: /readiness
              port: debug
          {{- else }}
          livenessProbe:
            httpGet:
              path: /
              port: api
          readinessProbe:
            httpGet:
              path: /
              port: api
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.p2pFixedPort.enabled }}
            - name: config-file
              mountPath: /home/bee
            {{- else }}
            - name: config
              mountPath: /home/bee/.bee.yaml
              readOnly: true
              subPath: .bee.yaml
            {{- end }}
            - name: data
              mountPath: /home/bee/.bee
            {{- if .Values.beeConfig.usePasswordFile }}
            - name: bee-secret
              mountPath: /home/bee/.secret
              readOnly: true
            {{- end }}
      volumes:
        - name: config-file
          emptyDir: {}
        - name: config
          configMap:
            name: {{ template "bee.fullname" . }}
        {{- if .Values.beeConfig.usePasswordFile }}
        - name: bee-secret
          secret:
            secretName: {{ template "bee.secretName" . }}
            items:
              - key: {{ template "bee.secretPasswordKey" . }}
                path: password
        {{- end }}
        {{- if .Values.libp2pSettings.enabled }}
        - name: bee-libp2p
          secret:
            secretName: {{ template "bee.fullname" . }}-libp2p
            items:
              - key: libp2pKeys
                path: libp2p.map
        {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        {{- include "bee.labelsVCT" . | nindent 8 }}
    spec:
      accessModes: 
        - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
      {{- end }}
    {{- end }}
  {{- end }}
