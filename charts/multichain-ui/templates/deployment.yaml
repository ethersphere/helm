apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "robustName" .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "helm-chart.labels" . | nindent 4 }}
  {{- if or (or .Values.gitRepository .Values.gitSha) .Values.gitBranch }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    {{- if .Values.gitRepository }}
    gimlet.io/git-repository: {{ .Values.gitRepository }}
    {{- end }}
    {{- if .Values.gitSha }}
    gimlet.io/git-sha: {{ .Values.gitSha }}
    {{- end }}
    {{- if .Values.gitBranch }}
    gimlet.io/git-branch: {{ .Values.gitBranch }}
    v1alpha1.opensca.dev/version.branch: {{ .Values.gitBranch }}
    {{- end }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "helm-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount }}
      serviceAccountName: {{ .Values.serviceAccount }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: static-files
        emptyDir: {}
      - name: nginx-config-dir
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-config-template
        configMap:
          name: {{ include "helm-chart.fullname" . }}-config-template
      initContainers:
      - name: init-con
        image: {{ .Values.buildImage }}
        {{- if or (or .Values.vars .Values.sealedSecrets) .Values.gitCloneUrlSecretName }}
        envFrom:
        {{- if .Values.vars }}
        - configMapRef:
            name: {{ template "common.robustName" .Release.Name }}
        {{- end }}
        {{- if .Values.sealedSecrets }}
        - secretRef:
            name: {{ template "common.robustName" .Release.Name }}
        {{- end }}
        {{- if .Values.gitCloneUrlSecretName }}
        - secretRef:
            name: {{ .Values.gitCloneUrlSecretName }}
        {{- end }}
        {{- end }}
        {{- if .Values.buildScript }}
        command:
        - sh 
        - -c 
        - |
          git clone {{ .Values.gitCloneUrl }} src &&
          cd src &&
          {{- if .Values.gitBranch }}
          git checkout {{ .Values.gitBranch }}
          {{- end }}
          {{ .Values.buildScript | nindent 10}}
          mkdir -p /usr/share/nginx/html &&
          cp -r ./{{ .Values.builtAssets }}. /usr/share/nginx/html
        {{- end }}
        volumeMounts:
        - name: static-files
          mountPath: /usr/share/nginx/html
      containers:
        - name: {{ template "robustName" .Release.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: static-files
            mountPath: /usr/share/nginx/html
          - name: nginx-config-dir
            mountPath: /etc/nginx/conf.d
          - name: nginx-config-template
            mountPath: /etc/nginx/templates
          - name: nginx-cache
            mountPath: /var/cache/nginx
          - name: nginx-run
            mountPath: /var/run
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
          - name: NGINX_HOST
            value: "{{ .Values.ingress.host }}"
          - name: NGINX_PORT
            value: "8080"
